<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>