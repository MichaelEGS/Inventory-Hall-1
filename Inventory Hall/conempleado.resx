<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        8B//w8Ef/+ADn//wAR////Af///4P/////8=
</value>
  </data>
</root>