<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Z4MaAAAAAElFTkSuQmCC
</value>
  </data>
</root>